= Status

Not stable for any kind of use. Buggy.

= Usage

  git clone git@github.com:mrbrdo/mruby_cc.git
  git submodule init
  git submodule update

  cd mruby && make
  cd ..

  echo "puts 'hello world'" > test.rb
  ruby mrbcc.rb test.rb

  ./test

Must compile also parts of mrblib (e.g. mruby/mrblib/enum.rb) that you use, or there is a good chance for crash. You can add include into your .rb file.

  #include 'mrblib/array.rb'
  #include 'mrblib/enum.rb'
  #include 'mrblib/class.rb'
  #include 'mrblib/compar.rb'
  #include 'mrblib/error.rb'
  #include 'mrblib/hash.rb'
  #include 'mrblib/kernel.rb'
  #include 'mrblib/numeric.rb'
  #include 'mrblib/print.rb'
  #include 'mrblib/range.rb'
  #include 'mrblib/string.rb'
  #include 'mrblib/struct.rb'

  #include 'test/assert.rb'
  #include 'test/t/argumenterror.rb'
  #include 'test/t/array.rb'
  #include 'test/t/basicobject.rb'
  #include 'test/t/bs_block.rb'
  #include 'test/t/bs_literal.rb'
  #include 'test/t/class.rb'
  #include 'test/t/comparable.rb'
  #include 'test/t/enumerable.rb'
  #include 'test/t/exception.rb'
  #include 'test/t/false.rb'
  #include 'test/t/float.rb'
  #include 'test/t/hash.rb'
  #include 'test/t/indexerror.rb'
  #include 'test/t/integer.rb'
  #include 'test/t/kernel.rb'
  #include 'test/t/literals.rb'
  #include 'test/t/localjumperror.rb'
  #include 'test/t/math.rb'
  #include 'test/t/module.rb'
  #include 'test/t/nameerror.rb'
  #include 'test/t/nil.rb'
  #include 'test/t/nomethoderror.rb'
  #include 'test/t/numeric.rb'
  #include 'test/t/object.rb'
  #include 'test/t/proc.rb'
  #include 'test/t/range.rb'
  #include 'test/t/rangeerror.rb'
  #include 'test/t/regexperror.rb'
  #include 'test/t/runtimeerror.rb'
  #include 'test/t/standarderror.rb'
  #include 'test/t/string.rb'
  #include 'test/t/struct.rb'
  #include 'test/t/symbol.rb'
  #include 'test/t/syntax.rb'
  #include 'test/t/time.rb'
  #include 'test/t/true.rb'
  #include 'test/t/typeerror.rb'

Right now cannot handle very long files. You can run a few tests at once but not all at once (will crash).
