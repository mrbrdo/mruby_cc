= Status

Not stable for any kind of use. Buggy.

= Usage

  git clone git@github.com:mrbrdo/mruby_cc.git
  git submodule init
  git submodule update

  cd mruby && make
  cd ..

  echo "puts 'hello world'" > test.rb
  ruby mrbcc.rb test.rb

  ./test

Must compile also parts of mrblib (e.g. mruby/mrblib/enum.rb) that you use, or there is a good chance for crash. You can add include into your .rb file.

Note you must use *Ruby* *MRI* to run mrbcc.rb, not mruby!

= Example

Example to run mruby test suite:

  #include 'mruby/mrblib/array.rb'
  #include 'mruby/mrblib/enum.rb'
  #include 'mruby/mrblib/class.rb'
  #include 'mruby/mrblib/compar.rb'
  #include 'mruby/mrblib/error.rb'
  #include 'mruby/mrblib/hash.rb'
  #include 'mruby/mrblib/kernel.rb'
  #include 'mruby/mrblib/numeric.rb'
  #include 'mruby/mrblib/print.rb'
  #include 'mruby/mrblib/range.rb'
  #include 'mruby/mrblib/string.rb'
  #include 'mruby/mrblib/struct.rb'

  #include 'mruby/test/assert.rb'
  #include 'mruby/test/t/*.rb'

  report

= Performance

Right now the performance of method calling should be improved. But we can see some performance improvement with tight loops (note I use while because each will use method calling on Proc).

  i = 0

  while i < 1000000000
    5 * 1.7
    i += 1
  end

  puts i

Compiled

  real  0m12.952s

Mruby interpreter

  real  1m14.385s
